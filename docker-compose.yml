services:
  manager1:
    image: crackhash-manager:latest
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - "8080:8080"
    networks:
      - crackhash
    environment:
      SPRING_PROFILES_ACTIVE: docker
  manager2:
    image: crackhash-manager:latest
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - "8081:8080"
    networks:
      - crackhash
    environment:
      SPRING_PROFILES_ACTIVE: docker
  worker:
    image: crackhash-worker:latest
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - crackhash
    environment:
      SPRING_PROFILES_ACTIVE: docker
      BPL_JVM_THREAD_COUNT: 50
      BPL_JVM_HEAP_SIZE: 200M
      BPL_JVM_CALCULATE_HEAP: false
      JAVA_TOOL_OPTIONS: "-Xmx250M -Xms100M -XX:MaxMetaspaceSize=64M -XX:ReservedCodeCacheSize=64M -XX:MaxDirectMemorySize=8M"
    deploy:
      replicas: 8
  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - crackhash
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data_container:/var/lib/rabbitmq
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - "27017:27017"
    networks:
      - crackhash
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGODB_USER: user
      MONGODB_DATABASE: worker
      MONGODB_PASS: userpassword
      MONGO_INITDB_DATABASE: worker
    volumes:
      - mongodb_data_container:/data/db
networks:
  crackhash:
    driver: bridge
volumes:
  mongodb_data_container:
  rabbitmq_data_container: